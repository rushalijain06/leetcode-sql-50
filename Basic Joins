1) Replace Employee ID With The Unique Identifier
SELECT unique_id, name
FROM Employees AS e
LEFT JOIN
EmployeeUNI AS eu ON e.id = eu.id;

2) Product Sales Analysis I
SELECT
product_name, year, price
FROM Sales s
LEFT JOIN
Product p ON s.product_id = p.product_id;

3) Customer Who Visited but Did Not Make Any Transactions
SELECT customer_id, COUNT(customer_id) AS count_no_trans
FROM Visits v
LEFT JOIN Transactions t ON v.visit_id = t.visit_id
WHERE transaction_id IS null
GROUP BY customer_id;

4) Rising Temperature
SELECT w1.id
FROM Weather w1, Weather w2 
WHERE DATEDIFF(w1.recordDate, w2.recordDate) = 1
AND w1.temperature > w2.temperature;

5) Average Time of Process per Machine
SELECT a1.machine_id, ROUND(AVG(a1.timestamp-a2.timestamp),3) AS processing_time
FROM Activity a1, Activity a2
WHERE a1.process_id = a2.process_id
AND a1.activity_type != a2.activity_type
AND a1.machine_id = a2.machine_id
AND a1.timestamp > a2.timestamp
GROUP BY a1.machine_id
ORDER BY a1.machine_id, a1.process_id;

6) Employee Bonus
SELECT
    name, bonus
        FROM Employee e
            LEFT JOIN
                Bonus b ON e.empID = b.empID
                    WHERE bonus < 1000 OR bonus IS null;

7) Students and Examinations
SELECT 
s.student_id, student_name, sub.subject_name, COUNT(e.subject_name) AS attended_exams
FROM Students s 
CROSS JOIN Subjects sub
LEFT JOIN Examinations e
ON
sub.subject_name = e.subject_name
AND s.student_id = e.student_id
GROUP BY s.student_id, s.student_name, sub.subject_name
ORDER BY s.student_id, sub.subject_name ASC;

8) Managers with at Least 5 Direct Reports
SELECT 
    e1.name
FROM Employee e1, Employee e2
WHERE e1.id = e2.managerId
GROUP BY e1.id
HAVING COUNT(e2.managerId) >= 5;

9) Confirmation Rate
SELECT 
    s.user_id, 
   ROUND(AVG(CASE WHEN action = 'confirmed' THEN 1 ELSE 0 END),2)  AS confirmation_rate
FROM Signups s
LEFT JOIN
Confirmations c ON s.user_id = c.user_id
GROUP BY s.user_id;
